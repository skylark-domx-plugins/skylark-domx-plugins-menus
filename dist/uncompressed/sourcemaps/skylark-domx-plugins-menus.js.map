{"version":3,"sources":["skylark-domx-plugins-menus.js"],"names":[],"mappingsfile":"../skylark-domx-plugins-menus.js","sourcesContent":["define('skylark-domx-plugins-menus/menus',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"domx.plugins.menus\");\r\n});\ndefine('skylark-domx-plugins-menus/menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-lists\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./menus\"\r\n],function(langx,$,lists,plugins,menus){\r\n  'use strict'\r\n\r\n\r\n  var Menu = plugins.Plugin.inherit({\r\n    klassName : \"Menu\",\r\n\r\n    pluginName : \"lark.menus.menu\",\r\n\r\n    options : {\r\n      template : \"\",\r\n\r\n      classes : {\r\n        base : \"lark-menu\"\r\n      },\r\n\r\n      selectors : {\r\n        container : null\r\n      },\r\n\r\n      item : {\r\n        templates : {\r\n          general : '<li class=\"menu-item\"><a href=\"#\" class=\"link\"><%= title %></a></li>',\r\n          separator : \"\",\r\n          hasChildren : '<li class=\"menu-item hasChildren\"><a href=\"#\" class=\"link\"><%= title %></a><ul class=\"submenu\"></ul>',\r\n        },\r\n\r\n        classes : {\r\n          base : \"menu-item\",\r\n          hasChildren : \"hasChildren\"\r\n        }\r\n      },\r\n\r\n      children : {\r\n        template : \"<ul></ul>\",\r\n        classes : {\r\n          base : \"submenu\"\r\n        },\r\n        selector : \"> .submenu\"\r\n      },\r\n\r\n      data : {\r\n        ///items : []\r\n      },\r\n\r\n      onAction : null\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n        plugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n        this._$container = this.$(this.options.selectors.container);\r\n\r\n        if (this.options.onAction) {\r\n          this.listenTo(this._$container,\"click\",`.${this.options.item.classes.base}`,(e)=>{\r\n              var itemData = $(e.currentTarget).data(\"item\");\r\n              this.options.onAction(itemData);\r\n\r\n          });\r\n        }\r\n\r\n    },\r\n\r\n    renderMenuItemHtml : function(itemData) {\r\n      if (!this._renderItemHtml) {\r\n        let itemTpl = this.options.item.template;\r\n        if (langx.isString(itemTpl)) {\r\n          this._renderItemHtml = langx.template(itemTpl);\r\n        } else if (langx.isFunction(itemTpl)) {\r\n          this._renderItemHtml = itemTpl;\r\n        }\r\n      }\r\n\r\n      return this._renderItemHtml(itemData);\r\n    },\r\n\r\n    renderGeneralMenuItem : function(itemData) {\r\n      if (!this._renderGeneralItemHtml) {\r\n        let itemTpl = this.options.item.templates.general;\r\n        if (langx.isString(itemTpl)) {\r\n          this._renderGeneralItemHtml = langx.template(itemTpl);\r\n        } else if (langx.isFunction(itemTpl)) {\r\n          this._renderGeneralItemHtml = itemTpl;\r\n        }\r\n      }\r\n      return $(this._renderGeneralItemHtml(itemData));\r\n    },\r\n\r\n    renderHasChildrenMenuItem : function(itemData) {\r\n      if (!this._renderHasChildrenItemHtml) {\r\n        let itemTpl = this.options.item.templates.hasChildren;\r\n        if (langx.isString(itemTpl)) {\r\n          this._renderHasChildrenItemHtml = langx.template(itemTpl);\r\n        } else if (langx.isFunction(itemTpl)) {\r\n          this._renderHasChildrenItemHtml = itemTpl;\r\n        }\r\n      }\r\n\r\n      return $(this._renderHasChildrenItemHtml(itemData));\r\n    }   \r\n\r\n\r\n  });\r\n\r\n\r\n  plugins.register(Menu);\r\n\r\n  return menus.Menu = Menu; \r\n});\ndefine('skylark-domx-plugins-menus/accordion-menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-lists\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./menus\",\r\n  \"./menu\"\r\n],function(langx,$,lists,plugins,menus,Menu){\r\n  'use strict'\r\n  \r\n   var AccordionMenu = Menu.inherit({\r\n    klassName : \"AccordionMenu\",\r\n\r\n    pluginName : \"lark.menus.accordion\",\r\n\r\n    _construct : function(elm,options) {\r\n        Menu.prototype._construct.call(this,elm,options);\r\n\r\n        lists.multitier(elm,langx.mixin({\r\n          togglable : true\r\n        },this.options));\r\n    }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(AccordionMenu);\r\n\r\n  return menus.AccordionMenu = AccordionMenu; \r\n});\ndefine('skylark-domx-plugins-menus/cascade-menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-lists\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./menus\",\r\n  \"./menu\"\r\n],function(langx,$,lists,plugins,menus,Menu){\r\n  'use strict'\r\n\r\n  var CascadeMenu = Menu.inherit({\r\n    klassName : \"CascadeMenu\",\r\n\r\n    pluginName : \"lark.menus.cascade\",\r\n\r\n    _construct : function(elm,options) {\r\n        Menu.prototype._construct.call(this,elm,options);\r\n\r\n        lists.multitier(elm,langx.mixin({\r\n          togglable : true\r\n        },this.options));\r\n    }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(CascadeMenu);\r\n\r\n  return menus.CascadeMenu = CascadeMenu;\t\r\n});\ndefine('skylark-domx-plugins-menus/nav-menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-lists\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./menus\",\r\n  \"./menu\"\r\n],function(langx,$,lists,plugins,menus,Menu){\r\n  'use strict'\r\n\r\n  var NavMenu = Menu.inherit({\r\n    klassName : \"NavMenu\",\r\n\r\n    pluginName : \"lark.menus.nav\",\r\n\r\n    options : {\r\n      item : {\r\n        templates : {\r\n        } \r\n      }\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n        Menu.prototype._construct.call(this,elm,options);\r\n\r\n        if (this.options.data.items) {\r\n          this.resetItems(this.options.data.items);\r\n        }\r\n\r\n        lists.multitier(elm,langx.mixin({\r\n          /*\r\n          show : function($el) {\r\n            $el;\r\n          },\r\n\r\n          hide : function($el) {\r\n            $el;\r\n\r\n          },\r\n\r\n          toggle : function($el) {\r\n            $el;\r\n\r\n          }\r\n          */\r\n        },this.options));\r\n    },\r\n\r\n    resetItems : function(itemsData) {\r\n      let self = this;\r\n\r\n      function renderItem(itemData,$container) {\r\n        let $item;\r\n        if (itemData.children) {\r\n          $item = self.renderHasChildrenMenuItem(itemData);\r\n        } else {\r\n          $item = self.renderGeneralMenuItem(itemData);\r\n        }\r\n\r\n        $item.data(\"item\",itemData);\r\n        $container.append($item)\r\n\r\n        if (itemData.children) {\r\n          let $childrenContainer = $item.find(self.options.children.selector);\r\n          itemData.children.forEach((childItemData) => {\r\n            renderItem(childItemData,$childrenContainer);            \r\n          });\r\n        }\r\n      }\r\n        \r\n      let $itemsContainer = this.$(this.options.selectors.container)\r\n\r\n      itemsData.forEach((itemData)=>{\r\n        renderItem(itemData,$itemsContainer);\r\n      });\r\n    }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(NavMenu);\r\n\r\n  return menus.NavMenu = NavMenu;\t\r\n});\n define('skylark-domx-plugins-menus/tree-menu',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-lists\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./menus\",\r\n  \"./menu\",\r\n  \"skylark-domx-plugins-toggles\"\r\n],function(langx,$,lists,plugins,menus,Menu){\r\n  'use strict'\r\n\r\n  var TreeMenu = Menu.inherit({\r\n    klassName : \"Tree\",\r\n\r\n    pluginName : \"lark.menus.tree\",\r\n\r\n    _construct : function(elm,options) {\r\n        Menu.prototype._construct.call(this,elm,options);\r\n\r\n        lists.multitier(elm,langx.mixin({\r\n          hide : function($el) {\r\n            $el.plugin(\"lark.toggles.collapse\").hide();\r\n          },\r\n          toggle : function($el) {\r\n            $el.plugin(\"lark.toggles.collapse\").toggle();\r\n          }\r\n        },this.options));\r\n    }\r\n\r\n  });\r\n\r\n\r\n  plugins.register(TreeMenu);\r\n\r\n  return menus.TreeMenu = TreeMenu;\t\r\n});\ndefine('skylark-domx-plugins-menus/main',[\r\n    \"./menus\",\r\n    \"./accordion-menu\",\r\n    \"./cascade-menu\",\r\n    \"./nav-menu\",\r\n    \"./tree-menu\"\r\n], function(menus) {\r\n    return menus;\r\n});\ndefine('skylark-domx-plugins-menus', ['skylark-domx-plugins-menus/main'], function (main) { return main; });\n\n"]}